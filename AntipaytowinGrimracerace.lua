local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==1) then function v32(v43,v44,v45)if v45 then local v82=0;local v83;while true do if (v82==0) then v83=(v43/(2^(v44-1)))%(2^(((v45-(2 -1)) -(v44-1)) + 1)) ;return v83-(v83%1) ;end end else local v84=2^(v44-1) ;return (((v43%(v84 + v84))>=v84) and 1) or 0 ;end end v33=nil;function v33()local v46=0;local v47;while true do if (v46==0) then v47=v9(v27,v30,v30);v30=v30 + 1 ;v46=1;end if (v46==1) then return v47;end end end v34=nil;v29=2;end if (v29==5) then v41=nil;function v41(v48,v49,v50)local v51=0;local v52;local v53;local v54;while true do if (0==v51) then v52=v48[1];v53=v48[2];v51=1;end if (v51==1) then v54=v48[3];return function(...)local v92=v52;local v93=v53;local v94=v54;local v95=v39;local v96=1;local v97= -1;local v98={};local v99={...};local v100=v20("#",...) -1 ;local v101={};local v102={};for v116=0,v100 do if (v116>=v94) then v98[v116-v94 ]=v99[v116 + 1 ];else v102[v116]=v99[v116 + 1 ];end end local v103=(v100-v94) + 1 + 0 ;local v104;local v105;while true do local v117=0;while true do if (v117==1) then if (v105<=43) then if (v105<=21) then if (v105<=(14 -4)) then if (v105<=4) then if (v105<=1) then if (v105==(0 -0)) then local v143=v104[2];v102[v143](v21(v102,v143 + 1 ,v104[1068 -(68 + 997) ]));else v102[v104[9 -7 ]]=v102[v104[3]][v104[1274 -(226 + 1044) ]];end elseif (v105<=(8 -6)) then local v146=0;local v147;while true do if (0==v146) then v147=v104[2];v102[v147](v21(v102,v147 + 1 ,v97));break;end end elseif (v105>3) then local v245=v104[2];v102[v245]=v102[v245](v21(v102,v245 + 1 ,v104[3]));else local v247=v104[119 -(32 + 85) ];local v248=v102[v104[3]];v102[v247 + 1 ]=v248;v102[v247]=v248[v104[4]];end elseif (v105<=7) then if (v105<=5) then local v148=0;local v149;local v150;local v151;local v152;while true do if (v148==1) then v97=(v151 + v149) -1 ;v152=0;v148=2;end if (v148==0) then v149=v104[2 + 0 ];v150,v151=v95(v102[v149](v21(v102,v149 + 1 ,v104[3])));v148=1;end if (v148==2) then for v347=v149,v97 do v152=v152 + 1 ;v102[v347]=v150[v152];end break;end end elseif (v105==(2 + 4)) then v102[v104[2]]=v102[v104[3]]%v104[961 -(892 + 65) ] ;else local v253=0;local v254;while true do if (0==v253) then v254=v104[2];v102[v254]=v102[v254](v21(v102,v254 + (2 -1) ,v97));break;end end end elseif (v105<=8) then local v153=v104[3 -1 ];local v154=v102[v153];for v214=v153 + 1 ,v97 do v15(v154,v102[v214]);end elseif (v105>9) then local v255=v104[2];local v256=v102[v104[4 -1 ]];v102[v255 + 1 ]=v256;v102[v255]=v256[v104[13 -9 ]];else local v260=v104[2];v102[v260](v21(v102,v260 + 1 ,v97));end elseif (v105<=(365 -(87 + 263))) then if (v105<=12) then if (v105==11) then local v155=v104[2];do return v102[v155](v21(v102,v155 + 1 ,v104[3]));end else local v156=v93[v104[183 -(67 + 113) ]];local v157;local v158={};v157=v18({},{[v7("\17\215\4\87\250\222\152","\224\78\136\109\57\158\187")]=function(v215,v216)local v217=0;local v218;while true do if (v217==0) then v218=v158[v216];return v218[1][v218[2]];end end end,[v7("\71\206\48\58\238\139\118\245\59\39","\226\24\145\94\95\153")]=function(v219,v220,v221)local v222=0;local v223;while true do if (v222==0) then v223=v158[v220];v223[1 + 0 ][v223[4 -2 ]]=v221;break;end end end});for v224=1,v104[1917 -(1789 + 124) ] do local v225=0;local v226;while true do if (v225==0) then v96=v96 + 1 ;v226=v92[v96];v225=1;end if (v225==1) then if (v226[1]==29) then v158[v224-1 ]={v102,v226[3]};else v158[v224-1 ]={v49,v226[3]};end v101[ #v101 + 1 ]=v158;break;end end end v102[v104[2]]=v41(v156,v157,v50);end elseif (v105<=13) then v96=v104[3];elseif (v105>14) then local v261=0;local v262;while true do if (0==v261) then v262=v104[2];do return v102[v262](v21(v102,v262 + 1 ,v104[3]));end break;end end else local v263=v104[2];do return v21(v102,v263,v97);end end elseif (v105<=18) then if (v105<=16) then local v161=v104[7 -5 ];v102[v161](v21(v102,v161 + 1 ,v104[3]));elseif (v105==17) then v102[v104[2]]=v50[v104[955 -(802 + 150) ]];else v102[v104[5 -3 ]]=v104[3];end elseif (v105<=(785 -(745 + 21))) then v102[v104[2]]=v102[v104[3]] + v104[2 + 2 ] ;elseif (v105>20) then if (v102[v104[2]]==v104[4]) then v96=v96 + 1 ;else v96=v104[5 -2 ];end else v102[v104[2]]=v104[3];end elseif (v105<=32) then if (v105<=(19 + 7)) then if (v105<=(90 -67)) then if (v105==22) then local v163=0;local v164;local v165;local v166;local v167;while true do if (v163==0) then v164=v104[999 -(915 + 82) ];v165,v166=v95(v102[v164](v102[v164 + 1 + 0 ]));v163=1;end if (v163==2) then for v356=v164,v97 do local v357=0;while true do if (0==v357) then v167=v167 + 1 + 0 ;v102[v356]=v165[v167];break;end end end break;end if (v163==1) then v97=(v166 + v164) -1 ;v167=0;v163=2;end end else for v227=v104[2],v104[3] do v102[v227]=nil;end end elseif (v105<=24) then v102[v104[2]][v102[v104[3]]]=v102[v104[11 -7 ]];elseif (v105==25) then local v270=v104[2];local v271,v272=v95(v102[v270](v21(v102,v270 + 1 ,v97)));v97=(v272 + v270) -1 ;local v273=0;for v335=v270,v97 do local v336=0;while true do if (v336==0) then v273=v273 + 1 + 0 ;v102[v335]=v271[v273];break;end end end else local v274=v104[2];v102[v274](v102[v274 + (1 -0) ]);end elseif (v105<=(1216 -(1069 + 118))) then if (v105<=27) then do return;end elseif (v105>28) then v102[v104[2]]=v102[v104[3]];else local v277=0;local v278;local v279;while true do if (v277==1) then for v394=v278 + 1 ,v104[1059 -(87 + 968) ] do v279=v279   .. v102[v394] ;end v102[v104[2]]=v279;break;end if (0==v277) then v278=v104[3];v279=v102[v278];v277=1;end end end elseif (v105<=30) then do return v102[v104[2]]();end elseif (v105==(70 -39)) then local v280=0;local v281;while true do if (v280==0) then v281=v104[2];v102[v281]=v102[v281](v21(v102,v281 + (4 -3) ,v104[3]));break;end end else v102[v104[2]]=v49[v104[3]];end elseif (v105<=37) then if (v105<=(31 + 3)) then if (v105==33) then v102[v104[2]][v104[3]]=v104[4];else v102[v104[2]][v104[3]]=v102[v104[4]];end elseif (v105<=35) then local v174=v104[3 -1 ];local v175,v176=v95(v102[v174](v21(v102,v174 + 1 ,v104[6 -3 ])));v97=(v176 + v174) -1 ;local v177=0;for v229=v174,v97 do local v230=0;while true do if (v230==0) then v177=v177 + 1 ;v102[v229]=v175[v177];break;end end end elseif (v105>36) then v102[v104[2]]= #v102[v104[3]];else local v285=0;local v286;local v287;local v288;while true do if (v285==0) then v286=v104[2];v287=v102[v286 + 1 + 1 ];v285=1;end if (v285==1) then v288=v102[v286] + v287 ;v102[v286]=v288;v285=2;end if (v285==2) then if (v287>0) then if (v288<=v102[v286 + 1 ]) then local v404=0;while true do if (v404==0) then v96=v104[3];v102[v286 + 3 ]=v288;break;end end end elseif (v288>=v102[v286 + 1 ]) then v96=v104[3];v102[v286 + 3 ]=v288;end break;end end end elseif (v105<=40) then if (v105<=38) then local v178=v104[3];local v179=v102[v178];for v231=v178 + (1414 -(447 + 966)) ,v104[6 -2 ] do v179=v179   .. v102[v231] ;end v102[v104[2]]=v179;elseif (v105==39) then v102[v104[2]]=v104[3]~=(0 + 0) ;elseif  not v102[v104[2]] then v96=v96 + 1 ;else v96=v104[3];end elseif (v105<=41) then local v181=0;local v182;local v183;while true do if (v181==0) then v182=v104[2];v183=v102[v182];v181=1;end if (v181==1) then for v361=v182 + 1 ,v97 do v15(v183,v102[v361]);end break;end end elseif (v105==42) then v102[v104[2]][v102[v104[3]]]=v104[4];else local v292=0;local v293;local v294;local v295;while true do if (v292==0) then v293=v104[2];v294=v102[v293];v292=1;end if (v292==1) then v295=v102[v293 + 2 ];if (v295>0) then if (v294>v102[v293 + 1 ]) then v96=v104[3];else v102[v293 + (794 -(368 + 423)) ]=v294;end elseif (v294<v102[v293 + (1818 -(1703 + 114)) ]) then v96=v104[9 -6 ];else v102[v293 + 3 ]=v294;end break;end end end elseif (v105<=65) then if (v105<=54) then if (v105<=48) then if (v105<=45) then if (v105==44) then v102[v104[2]]=v104[3]~=0 ;else v102[v104[703 -(376 + 325) ]]=v50[v104[3]];end elseif (v105<=46) then v50[v104[3]]=v102[v104[2]];elseif (v105==47) then v102[v104[2]]=v49[v104[3]];else v102[v104[2]]=v41(v93[v104[3]],nil,v50);end elseif (v105<=(69 -(10 + 8))) then if (v105<=(79 -30)) then v96=v104[3];elseif (v105==50) then do return;end elseif (v104[2]==v102[v104[4]]) then v96=v96 + 1 ;else v96=v104[3];end elseif (v105<=(199 -147)) then for v232=v104[2],v104[3] do v102[v232]=nil;end elseif (v105==53) then v102[v104[2]]={};else v102[v104[2]][v102[v104[8 -5 ]]]=v102[v104[4]];end elseif (v105<=59) then if (v105<=56) then if (v105==55) then v102[v104[2]][v104[3]]=v102[v104[4]];else v102[v104[2]][v102[v104[3]]]=v104[4];end elseif (v105<=57) then v102[v104[444 -(416 + 26) ]]();elseif (v105==58) then do return v102[v104[2]]();end elseif v102[v104[2]] then v96=v96 + 1 ;else v96=v104[3];end elseif (v105<=62) then if (v105<=60) then if  not v102[v104[1 + 1 ]] then v96=v96 + 1 ;else v96=v104[3];end elseif (v105==(134 -73)) then local v303=0;local v304;local v305;local v306;while true do if (v303==1) then v306=v102[v304 + 2 ];if (v306>0) then if (v305>v102[v304 + (15 -(9 + 5)) ]) then v96=v104[3];else v102[v304 + 3 ]=v305;end elseif (v305<v102[v304 + 1 ]) then v96=v104[2 + 1 ];else v102[v304 + 3 ]=v305;end break;end if (v303==0) then v304=v104[6 -4 ];v305=v102[v304];v303=1;end end else local v307=v104[2];v102[v307]=v102[v307]();end elseif (v105<=63) then local v194=0;local v195;local v196;local v197;while true do if (v194==1) then v197=v102[v195] + v196 ;v102[v195]=v197;v194=2;end if (v194==2) then if (v196>(0 -0)) then if (v197<=v102[v195 + 1 ]) then local v401=0;while true do if (v401==0) then v96=v104[1268 -(243 + 1022) ];v102[v195 + 3 ]=v197;break;end end end elseif (v197>=v102[v195 + 1 ]) then v96=v104[3];v102[v195 + (11 -8) ]=v197;end break;end if (v194==0) then v195=v104[378 -(85 + 291) ];v196=v102[v195 + 2 ];v194=1;end end elseif (v105==(53 + 11)) then local v309=0;local v310;while true do if (v309==0) then v310=v104[2];do return v21(v102,v310,v97);end break;end end else v102[v104[1182 -(1123 + 57) ]]=v41(v93[v104[3]],nil,v50);end elseif (v105<=76) then if (v105<=70) then if (v105<=(55 + 12)) then if (v105>66) then v102[v104[2]]=v102[v104[257 -(163 + 91) ]]%v102[v104[442 -(145 + 293) ]] ;elseif v102[v104[2]] then v96=v96 + 1 ;else v96=v104[3];end elseif (v105<=68) then local v199=0;local v200;while true do if (0==v199) then v200=v104[2];v102[v200]=v102[v200]();break;end end elseif (v105>(499 -(44 + 386))) then v102[v104[2]]=v104[1933 -(1869 + 61) ] + v102[v104[4]] ;elseif (v104[2]==v102[v104[4]]) then v96=v96 + 1 ;else v96=v104[1 + 2 ];end elseif (v105<=(256 -183)) then if (v105<=71) then if (v102[v104[2]]==v104[4]) then v96=v96 + 1 ;else v96=v104[1489 -(998 + 488) ];end elseif (v105>72) then v102[v104[2]]=v102[v104[4 -1 ]]%v102[v104[4]] ;else v102[v104[1 + 1 ]]=v102[v104[3]];end elseif (v105<=74) then v102[v104[2]]=v102[v104[3]][v104[4]];elseif (v105==75) then local v318=v104[2];v102[v318]=v102[v318](v21(v102,v318 + 1 ,v97));else v102[v104[2]]=v102[v104[3]]%v104[4] ;end elseif (v105<=81) then if (v105<=(25 + 53)) then if (v105>(105 -28)) then v102[v104[2]]();else local v203=v104[2];v102[v203](v102[v203 + 1 ]);end elseif (v105<=79) then local v204=0;local v205;local v206;local v207;local v208;while true do if (v204==2) then for v365=v205,v97 do v208=v208 + 1 + 0 ;v102[v365]=v206[v208];end break;end if (1==v204) then v97=(v207 + v205) -1 ;v208=0;v204=2;end if (v204==0) then v205=v104[2];v206,v207=v95(v102[v205](v21(v102,v205 + 1 ,v97)));v204=1;end end elseif (v105>80) then v102[v104[2]]=v104[3] + v102[v104[4]] ;else v102[v104[1476 -(1329 + 145) ]][v104[3]]=v104[4];end elseif (v105<=84) then if (v105<=82) then local v209=v93[v104[3]];local v210;local v211={};v210=v18({},{[v7("\194\242\29\219\74\178\229","\215\157\173\116\181\46")]=function(v234,v235)local v236=v211[v235];return v236[773 -(201 + 571) ][v236[2]];end,[v7("\10\139\133\247\205\60\186\143\247\194","\186\85\212\235\146")]=function(v237,v238,v239)local v240=0;local v241;while true do if (v240==0) then v241=v211[v238];v241[1][v241[2]]=v239;break;end end end});for v242=1,v104[4] do local v243=0;local v244;while true do if (v243==1) then if (v244[1]==(1167 -(116 + 1022))) then v211[v242-1 ]={v102,v244[3]};else v211[v242-1 ]={v49,v244[3]};end v101[ #v101 + 1 ]=v211;break;end if (v243==0) then v96=v96 + (972 -(140 + 831)) ;v244=v92[v96];v243=1;end end end v102[v104[2]]=v41(v209,v210,v50);elseif (v105==83) then local v324=v104[2];local v325,v326=v95(v102[v324](v102[v324 + 1 ]));v97=(v326 + v324) -1 ;local v327=1850 -(1409 + 441) ;for v345=v324,v97 do local v346=0;while true do if (0==v346) then v327=v327 + 1 ;v102[v345]=v325[v327];break;end end end else v102[v104[720 -(15 + 703) ]]=v102[v104[3]] + v104[16 -12 ] ;end elseif (v105<=85) then v102[v104[2]]={};elseif (v105>86) then v50[v104[3]]=v102[v104[2]];else v102[v104[2]]= #v102[v104[441 -(262 + 176) ]];end v96=v96 + 1 ;break;end if (v117==0) then v104=v92[v96];v105=v104[1];v117=1;end end end end;end end end return v41(v40(),{},v28)(...);end if (4==v29) then v39=nil;function v39(...)return {...},v20("#",...);end v40=nil;function v40()local v55=0;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v55==0) then v56={};v57={};v58={};v59={v56,v57,nil,v58};v55=1;end if (v55==2) then for v106=1 -0 ,v35() do local v107=v33();if (v32(v107,1,1)==0) then local v118=v32(v107,2,3);local v119=v32(v107,4,625 -(555 + 64) );local v120={v34(),v34(),nil,nil};if (v118==(931 -(857 + 74))) then local v130=0;while true do if (v130==0) then v120[571 -(367 + 201) ]=v34();v120[4]=v34();break;end end elseif (v118==(928 -(214 + 713))) then v120[3]=v35();elseif (v118==2) then v120[1426 -(630 + 793) ]=v35() -(2^16) ;elseif (v118==3) then v120[3]=v35() -(2^16) ;v120[4]=v34();end if (v32(v119,1,1)==1) then v120[2]=v61[v120[2]];end if (v32(v119,2,1 + 1 )==1) then v120[3]=v61[v120[3]];end if (v32(v119,3,3)==(1 + 0)) then v120[4]=v61[v120[881 -(282 + 595) ]];end v56[v106]=v120;end end for v108=1,v35() do v57[v108-1 ]=v40();end return v59;end if (v55==1) then v60=v35();v61={};for v110=886 -(261 + 624) ,v60 do local v111=0;local v112;local v113;while true do if (v111==0) then v112=v33();v113=nil;v111=1;end if (v111==1) then if (v112==1) then v113=v33()~=0 ;elseif (v112==(4 -2)) then v113=v36();elseif (v112==3) then v113=v37();end v61[v110]=v113;break;end end end v59[3]=v33();v55=2;end end end v29=5;end if (v29==2) then function v34()local v62,v63=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;return (v63 * (934 -678)) + v62 ;end v35=nil;function v35()local v64=0;local v65;local v66;local v67;local v68;while true do if (v64==0) then v65,v66,v67,v68=v9(v27,v30,v30 + (10 -7) );v30=v30 + 4 ;v64=1;end if (v64==1) then return (v68 * 16777216) + (v67 * 65536) + (v66 * 256) + v65 ;end end end v36=nil;v29=3;end if (3==v29) then function v36()local v69=0;local v70;local v71;local v72;local v73;local v74;local v75;while true do if (v69==0) then v70=v35();v71=v35();v69=1;end if (2==v69) then v74=v32(v71,21,31);v75=((v32(v71,32)==1) and  -1) or 1 ;v69=3;end if (v69==1) then v72=1;v73=(v32(v71,1,20) * ((5 -3)^32)) + v70 ;v69=2;end if (v69==3) then if (v74==0) then if (v73==0) then return v75 * (859 -(814 + 45)) ;else local v127=0;while true do if (0==v127) then v74=1;v72=0 -0 ;break;end end end elseif (v74==2047) then return ((v73==0) and (v75 * (1/0))) or (v75 * NaN) ;end return v16(v75,v74-(56 + 967) ) * (v72 + (v73/(2^(19 + 33)))) ;end end end v37=nil;function v37(v76)local v77;if  not v76 then local v85=0;while true do if (v85==0) then v76=v35();if (v76==0) then return "";end break;end end end v77=v11(v27,v30,(v30 + v76) -1 );v30=v30 + v76 ;local v78={};for v80=1, #v77 do v78[v80]=v10(v9(v11(v77,v80,v80)));end return v14(v78);end v38=v35;v29=4;end if (v29==0) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\140\207","\56\162\225\118\158\89\142"),function(v79)if (v9(v79,2)==(47 + 32)) then local v86=0;while true do if (v86==0) then v31=v8(v11(v79,1,1));return "";end end else local v87=v10(v8(v79,16));if v31 then local v114=0;local v115;while true do if (v114==0) then v115=v13(v87,v31);v31=nil;v114=1;end if (v114==1) then return v115;end end else return v87;end end end);v32=nil;v29=1;end end end vv17(),...);
--Made by cr.i 
--Old Name LordLother
--Pls JOin This Server : https://discord.gg/rGWaJZmuXS
